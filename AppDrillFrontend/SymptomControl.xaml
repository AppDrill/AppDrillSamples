<UserControl x:Class="AppDrillFrontend.SymptomControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:core="clr-namespace:System;assembly=mscorlib"
             xmlns:appdrillcore="clr-namespace:AppDrillCore.Model;assembly=AppDrillCore"
             xmlns:local="clr-namespace:AppDrillFrontend"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">

    <UserControl.Resources>
        <!--Create list of enumeration values-->
        <ObjectDataProvider x:Key="myEnum" MethodName="GetValues" ObjectType="{x:Type core:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type Type="appdrillcore:TestResult"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
    </UserControl.Resources>

    <StackPanel Margin="10">
        <StackPanel Orientation="Horizontal">
            <TextBlock Margin="5" FontSize="16">Tests available to isolate the failure</TextBlock>
            <Label Margin="5" Background="LightGreen">Passed</Label>
            <Label Margin="5" Background="Pink">Failed</Label>
            <Label Margin="5" Background="Bisque">Skipped</Label>
            <Label Margin="5" Background="Gray">Not applicable</Label>
        </StackPanel>
        <DataGrid Margin="5" Name="testsDataGrid" AutoGenerateColumns="False" ItemsSource="{Binding}" MinHeight="100">
            <DataGrid.CellStyle>
                <Style TargetType="DataGridCell">
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="Foreground" Value="Black" />
                            <Setter Property="BorderThickness" Value="3" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="AliceBlue"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.CellStyle>
            <DataGrid.RowStyle>
                <Style TargetType="DataGridRow">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding applicable}" Value="false">
                            <Setter Property="Background" Value="Gray"></Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding result}" Value="Passed">
                            <Setter Property="Background" Value="LightGreen"></Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding result}" Value="Failed">
                            <Setter Property="Background" Value="Pink"></Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding result}" Value="Skipped">
                            <Setter Property="Background" Value="Bisque"></Setter>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.RowStyle>
            <DataGrid.Columns>
                <DataGridTextColumn Header="Name" MinWidth="200" Binding="{Binding name}" IsReadOnly="True">
                    <DataGridTextColumn.CellStyle>
                        <Style TargetType="DataGridCell">
                            <Setter Property="ToolTip" Value="{Binding name}" />
                            <Style.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Background" Value="Transparent" />
                                    <Setter Property="Foreground" Value="Black" />
                                    <Setter Property="BorderThickness" Value="3" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="AliceBlue"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridTextColumn.CellStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Description" MinWidth="400" Width="*" Binding="{Binding description}" IsReadOnly="True">
                    <DataGridTextColumn.CellStyle>
                        <Style TargetType="DataGridCell">
                            <Setter Property="ToolTip" Value="{Binding description}" />
                            <Style.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Background" Value="Transparent" />
                                    <Setter Property="Foreground" Value="Black" />
                                    <Setter Property="BorderThickness" Value="3" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="AliceBlue"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridTextColumn.CellStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Rank" MinWidth="50" Binding="{Binding rank}" IsReadOnly="True"/>
                <DataGridTextColumn Header="Cost" MinWidth="50" Binding="{Binding cost}" IsReadOnly="True"/>
                <DataGridTextColumn Header="Duration" MinWidth="50" Binding="{Binding duration}" IsReadOnly="True"/>
                <DataGridComboBoxColumn Header="Result" MinWidth="100" SelectedItemBinding="{Binding result}" ItemsSource="{Binding Source={StaticResource myEnum}}">
                    <!--<DataGridComboBoxColumn.CellStyle>
                            <Style>
                                <Setter Property="UIElement.IsEnabled" Value="{Binding applicable}" />
                            </Style>
                        </DataGridComboBoxColumn.CellStyle>-->
                </DataGridComboBoxColumn>
            </DataGrid.Columns>
        </DataGrid>
        <StackPanel Orientation="Horizontal">
            <TextBlock Margin="5" FontSize="16">Failures that may be the cause of the selected symptoms</TextBlock>
            <Label Margin="5" Background="LightGreen">Cleared</Label>
            <Label Margin="5" Background="Pink">Suspected</Label>
            <Label Margin="5" Background="Bisque">Not tested</Label>
        </StackPanel>
        <DataGrid Margin="5" Name="failuresDataGrid" AutoGenerateColumns="False" ItemsSource="{Binding}" IsReadOnly="True" MinHeight="100">
            <DataGrid.CellStyle>
                <Style TargetType="DataGridCell">
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="Foreground" Value="Black" />
                            <Setter Property="BorderThickness" Value="3" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="AliceBlue"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.CellStyle>
            <DataGrid.RowStyle>
                <Style TargetType="DataGridRow">
                    <EventSetter Event="MouseDoubleClick" Handler="FailureRow_MouseDoubleClick"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding resolution}" Value="Cleared">
                            <Setter Property="Background" Value="LightGreen"></Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding resolution}" Value="Suspected">
                            <Setter Property="Background" Value="Pink"></Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding resolution}" Value="NotTested">
                            <Setter Property="Background" Value="Bisque"></Setter>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.RowStyle>
            <DataGrid.Columns>
                <DataGridTextColumn Header="Name" MinWidth="200" Binding="{Binding name}" IsReadOnly="True">
                    <DataGridTextColumn.CellStyle>
                        <Style TargetType="DataGridCell">
                            <Setter Property="ToolTip" Value="{Binding name}" />
                            <Style.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Background" Value="Transparent" />
                                    <Setter Property="Foreground" Value="Black" />
                                    <Setter Property="BorderThickness" Value="3" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="AliceBlue"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridTextColumn.CellStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Component" MinWidth="150" MaxWidth="150" Binding="{Binding component}" IsReadOnly="True">
                    <DataGridTextColumn.CellStyle>
                        <Style TargetType="DataGridCell">
                            <Setter Property="ToolTip" Value="{Binding component}" />
                            <Style.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Background" Value="Transparent" />
                                    <Setter Property="Foreground" Value="Black" />
                                    <Setter Property="BorderThickness" Value="3" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="AliceBlue"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridTextColumn.CellStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Description" MinWidth="320" Width="*" Binding="{Binding description}" IsReadOnly="True">
                    <DataGridTextColumn.CellStyle>
                        <Style TargetType="DataGridCell">
                            <Setter Property="ToolTip" Value="{Binding description}" />
                            <Style.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Background" Value="Transparent" />
                                    <Setter Property="Foreground" Value="Black" />
                                    <Setter Property="BorderThickness" Value="3" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="AliceBlue"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridTextColumn.CellStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Probability" MinWidth="80" Binding="{Binding probability}" IsReadOnly="True"/>
                <DataGridTextColumn Header="CPoF" MinWidth="80" Binding="{Binding calculatedProbabilityOfFailure}" IsReadOnly="True"/>
                <DataGridTextColumn Header="Resolution" MinWidth="80" Binding="{Binding resolution}" IsReadOnly="True"/>
            </DataGrid.Columns>
        </DataGrid>
    </StackPanel>
</UserControl>
